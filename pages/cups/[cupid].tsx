import type { NextPage } from "next";
import Head from "next/head";
import styles from "../../styles/CupDetails.module.css";
import React, { useState, useEffect, useContext } from "react";
import { useRouter } from "next/router";
import { UserContext } from "../../context/UserProvider";
import JoinCupDialog from "../../Components/JoinCupDialog";
import EndRegistrationDialog from "../../Components/EndRegistrationDialog";
import DistributePrizesDialog from "../../Components/DistributePrizesDialog";
import TradeCryptoDialog from "../../Components/TradeCryptoDialog";
import moment from "moment";
import { db } from "../../config/firebase.config";
import { getDoc, Timestamp, doc, onSnapshot } from "firebase/firestore";
import { Icon } from "@iconify/react";
import Leaderboard from "../../Components/Leaderboards";

const CupDetails: NextPage = () => {
  const router = useRouter();
  const [loading, setLoading] = useState<boolean>(true);
  const [cupid] = useState(router.asPath.substring(1).split("/")[1]);
  const [imageURL, setImageURL] = useState("");
  const [name, setName] = useState("");
  const [cupType, setCupType] = useState("");
  const [director, setDirector] = useState("");
  const [directorID, setDirectorID] = useState("");
  const [cupState, setCupState] = useState("");
  const [buyIn, setBuyIn] = useState(0);
  const [startDate, setStartDate] = useState(Timestamp.now());
  const [endDate, setEndDate] = useState(Timestamp.now());
  const [joinedUser, setJoinedUser] = useState(false);
  const [ethAddress, setEthAddress] = useState("");
  const [userPortfolios, setUserPortfolios] = useState<any>({});
  const {
    query: { id },
  } = router;
  const user = useContext(UserContext);

  useEffect(() => {
    if (cupid) {
      const cupDocRef = doc(db, "cups", cupid);
      const unsubscribe = onSnapshot(cupDocRef, async (snapshot) => {
        const data: any = snapshot.data();
        setImageURL(data.imageURL);
        setName(data.name);
        setCupType(data.cupType);
        setDirectorID(data.director);
        setCupState(data.currentState);
        setBuyIn(data.buyIn);
        setStartDate(data.startDate);
        setEndDate(data.endDate);
        setEthAddress(data.ethAddress);
        setUserPortfolios(data.userPortfolios);
        if (user.uid in data.userPortfolios) {
          setJoinedUser(true);
        }
        const userDocRef = doc(db, "users", data.director);
        const userDocSnap = await getDoc(userDocRef);
        const userData: any = userDocSnap.data();
        setDirector(userData.firstName + " " + userData.lastName);
        setLoading(false);
      });
      return unsubscribe;
    }
  }, []);

  return (
    <div>
      <Head>
        <title>CupDetails</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <img className={styles.placeholder} src={imageURL}></img>
      <div className={styles.container}>
        {loading ? (
          <p>loading</p>
        ) : (
          <div>
            {user.uid === directorID &&
              moment(startDate.toDate()).isBefore(moment()) &&
              cupState === "created" && (
                <EndRegistrationDialog cup={{ id: cupid, ethAddress }} />
              )}
            {user.uid === directorID &&
              moment(endDate.toDate()).isBefore(moment()) &&
              cupState === "active" && (
                <DistributePrizesDialog
                  cup={{
                    id: cupid,
                    ethAddress,
                    rankings: Object.keys(userPortfolios),
                  }}
                />
              )}
            <h5 className={styles.name}>{name}</h5>
            <div className={styles.cuptype}>{cupType}</div>
            <h6 className={styles.commis}>Cup Commissioner: {director}</h6>
            <h6 className={styles.buyin}>Buy-In: {buyIn} ETH</h6>
            <h6 className={styles.date}>
              {moment(startDate.toDate()).format("M/D/YYYY")}&nbsp;-&nbsp;
              {moment(endDate.toDate()).format("M/D/YYYY")}
            </h6>
            {!joinedUser ? (
              <div className={styles.center}>
                <h4 className={styles.joinnow}>
                  This Cup is currently accepting players. Join now!
                </h4>
                <div>
                  <JoinCupDialog cup={{ name, id: cupid, buyIn, ethAddress }} />
                </div>
              </div>
            ) : (
              <div>
                <h5 className={styles.cupwallet}>Your Cup Wallet:</h5>
                <div className={styles.walleticon}>
                  <Icon
                    icon="cryptocurrency:usd"
                    color="#83bd67"
                    width="30"
                    height="30"
                  />
                  <h6 className={styles.walletmoney}>XD USD</h6>
                </div>
                <h6 className={styles.asd}>Total: $123.12 USD</h6>
                <h4 className={styles.ogbudget}>
                  (Original budget: $123.12 USD)
                </h4>
                <TradeCryptoDialog
                  cup={{ id: cupid, userPortfolio: userPortfolios[user.uid] }}
                />
              </div>
            )}
          </div>
        )}
        <h1>Leaderboard</h1>
        <Leaderboard cupid={cupid} portfolios={userPortfolios} />
      </div>
    </div>
  );
};

export default CupDetails;
